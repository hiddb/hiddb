#!/usr/bin/env python3

import json
import asyncio
import aiohttp


async def query_by_vec(index_id, vector):
    resp = await aiohttp.ClientSession().request(
        "post", 'http://45.32.159.236/index/'+str(index_id) + '/search',
        data=json.dumps({"vector": vector, "max_neighbors": 5}),
        headers={"content-type": "application/json"})
    print(str(resp))
    print(await resp.text())
    assert 200 == resp.status


async def query_by_id(index_id, id):
    resp = await aiohttp.ClientSession().request(
        "post", 'http://45.32.159.236/index/'+str(index_id) + '/search',
        data=json.dumps({"id": id, "max_neighbors": 8}),
        headers={"content-type": "application/json"})
    print(str(resp))
    print(await resp.text())
    assert 200 == resp.status


async def get_index_info(id):
    resp = await aiohttp.ClientSession().request(
        "get", 'http://45.32.159.236/index/' + str(id))
    print(str(resp))
    print(await resp.text())
    assert 200 == resp.status

# gruen = [0.0376, -0.0913, 0.0321, -0.0276, 0.0231, -0.0384, 0.0701, 0.0775, 0.0635, -0.1316, -0.0556, 0.0715, -0.0120, 0.0196, -0.1119, -0.1202, -0.0164, -0.0070, -0.0284, -0.0122, 0.0120, -0.0442, 0.1673, -0.0045, -0.0088, -0.1763, -0.0597, 0.1078, 0.0889, -0.0336, -0.0390, 0.0013, 0.0765, -0.0004, -0.0567, 0.0025, 0.0232, 0.0339, 0.0448, 0.0327, 0.1072, -0.0442, -0.0320, 0.0428, 0.0233, 0.1071, -0.1263, 0.0273, -0.0719, -0.0716, -0.0066, -0.0702, 0.0394, -0.0040, 0.0091, 0.0214, 0.0288, 0.0635, -0.0018, -0.1271, 0.0057, 0.0523, 0.0879, 0.0575, 0.0340, -0.0186, 0.0637, -0.1277, -0.0026, 0.0217, -0.0390, 0.0503, -0.1396, 0.0516, 0.0460, 0.0846, -0.0014, -0.0126, -0.0099, -0.0093, -0.0090, 0.0141, -0.0123, 0.0406, -0.0468, 0.0897, -0.0704, -0.0861, -0.0459, -0.0529, 0.0715, 0.0983, 0.0240, -0.0559, 0.0485, 0.0152, 0.0178, -0.0891, -0.0760, 0.0455, -0.0308, -0.0079, 0.0227, -0.0952, 0.0816, -0.1146, -0.0353, 0.0547, 0.0499, -0.0871, -0.0962, 0.1023, 0.0503, -0.0889, -0.0173, 0.0884, 0.0597, -0.0266, 0.0330, -0.0073, -0.1413, -0.0184, 0.0982, -0.0497, 0.0076, 0.0547, -0.1315, -0.0275, -0.0367, -0.0554, 0.1439, 0.1816, 0.0445, 0.1589, 0.0851, -0.0741, -0.0345, -0.0271, 0.0863, -0.0004, -0.0086, -0.0439, -0.0315, 0.0593, -0.0278, 0.0656, 0.0735, -0.1108, -0.0218, 0.1108, -
#          0.0108, 0.0197, 0.0869, 0.0449, -0.0628, 0.1727, -0.0255, -0.0122, 0.0298, -0.1022, -0.0263, -0.0265, 0.1075, -0.1257, -0.0788, 0.0676, 0.0200, 0.1354, -0.0223, 0.0135, 0.0739, -0.1557, 0.1109, -0.0160, -0.0122, 0.0390, -0.0207, -0.1002, 0.0816, -0.0291, 0.2365, -0.1437, -0.0928, 0.0258, -0.1235, -0.0141, 0.0531, 0.0224, 0.1133, -0.0145, -0.0087, -0.0676, -0.0090, -0.0169, -0.0348, 0.0910, 0.0369, 0.0832, 0.1026, 0.0308, 0.0910, -0.0456, -0.0745, -0.0589, -0.0581, -0.0129, -0.0618, -0.1701, -0.1367, -0.0613, 0.1395, 0.0246, -0.0018, -0.0404, 0.0248, -0.0143, -0.0727, 0.0601, 0.1213, 0.0378, -0.0658, 0.1093, -0.1439, 0.0377, 0.0355, -0.1171, 0.0730, -0.0864, -0.0180, -0.0715, 0.0833, -0.0468, -0.1066, -0.0002, -0.0474, 0.0657, -0.0580, -0.0415, 0.0129, 0.0682, 0.1973, 0.0437, 0.0195, -0.0380, 0.0269, -0.1492, -0.0297, 0.0781, 0.0912, -0.0518, 0.0226, -0.0043, -0.0202, 0.0225, 0.1173, 0.1258, -0.0024, -0.0776, -0.1064, 0.0417, 0.1084, -0.0335, -0.0583, -0.1673, 0.0203, -0.1109, -0.0273, -0.0337, 0.0332, 0.0426, 0.0718, -0.0584, -0.2377, 0.1360, 0.0088, -0.1474, 0.1545, 0.0518, -0.0267, -0.0386, -0.2190, -0.0037, -0.0512, -0.0505, -0.1178, -0.0176, 0.0176, -0.1638, -0.0515, -0.0621, -0.0460, 0.0716, 0.0327, 0.0289, -0.0868, -0.0097, -0.0721, -0.0394, 0.0094, 0.0689]

# bauwerk = [-0.0423, 0.0109, -0.0095, 0.0258, 0.0379, -0.0626, -0.0274, -0.0045, 0.0607, 0.0327, 0.0104, -0.0223, -0.0496, -0.0192, 0.0136, 0.0189, 0.0269, -0.0360, -0.0965, -0.0022, 0.0839, 0.0687, 0.0189, -0.0367, -0.0116, -0.0673, -0.0764, 0.0183, 0.0083, -0.0431, 0.0095, 0.0161, -0.0766, -0.0071, -0.0056, 0.0426, 0.0742, 0.0377, 0.0103, -0.0541, -0.0328, -0.0353, 0.0239, -0.0440, 0.0531, 0.0129, 0.0207, 0.0106, 0.0418, 0.0191, 0.0030, -0.0240, -0.0239, 0.0454, -0.0294, 0.0715, 0.0028, -0.0057, 0.0525, -0.0274, -0.0329, 0.0545, -0.0216, 0.0484, 0.0352, 0.0003, 0.0605, -0.0756, 0.0055, 0.0193, 0.0337, 0.0112, -0.0144, 0.0429, 0.0027, -0.0087, 0.0106, -0.0912, 0.0058, 0.0587, -0.0081, -0.0637, 0.0237, 0.0234, -0.0134, 0.0433, 0.0141, 0.0226, 0.0485, -0.0759, 0.0568, 0.0302, 0.0272, -0.0085, 0.0326, -0.0648, 0.0469, 0.0319, -0.0801, 0.0316, 0.0113, -0.0131, -0.0302, -0.0073, 0.0787, 0.0078, 0.0012, 0.0014, -0.0773, -0.0464, -0.0432, 0.0403, 0.0685, 0.0131, 0.0040, 0.0210, 0.0165, -0.0261, 0.0554, -0.0403, -0.1086, -0.0181, -0.0018, 0.0225, -0.0976, -0.0125, -0.0757, -0.0385, -0.0034, -0.0729, 0.0971, 0.0462, -0.0067, -0.0171, -0.0319, 0.0262, 0.0419, 0.0195, -0.0237, -0.0363, 0.0716, 0.0023, 0.0348, -0.0653, 0.0032, 0.0431, 0.0220, 0.0229, -0.0300, 0.0505, -
#            0.0031, 0.0393, 0.0515, -0.0218, 0.0247, 0.0657, -0.0590, 0.0195, 0.0901, -0.1078, 0.0087, -0.0208, -0.0065, -0.0603, -0.0767, -0.0659, 0.0179, 0.0714, 0.0211, 0.0009, 0.0156, -0.0810, 0.0150, -0.0704, -0.0459, 0.0233, 0.0463, -0.0462, 0.0095, -0.0538, -0.0233, 0.0421, 0.0346, -0.0244, -0.0772, -0.0685, 0.0252, -0.0071, -0.0198, 0.0576, -0.0009, -0.0126, -0.0087, 0.0432, 0.0451, 0.0291, 0.0586, -0.0364, 0.0327, -0.0246, -0.0160, -0.0446, 0.1154, 0.0434, 0.0177, 0.0149, -0.0162, -0.0273, -0.0139, -0.0197, 0.0212, 0.0155, -0.0195, 0.0795, 0.0760, 0.0108, 0.0008, 0.0143, 0.0054, -0.0079, -0.0450, -0.0148, -0.0026, -0.0451, 0.0213, -0.0683, -0.0091, -0.0094, 0.0074, 0.0063, -0.0577, -0.0552, 0.0111, 0.0393, 0.0340, 0.0440, 0.0093, 0.0431, 0.0031, -0.0178, -0.0036, 0.0109, 0.0200, -0.0308, -0.0638, 0.0246, -0.0039, -0.0349, -0.0389, -0.0490, 0.0099, -0.0723, 0.0619, -0.0107, 0.0438, -0.0092, -0.0279, 0.0572, 0.0258, -0.0612, 0.0116, 0.1130, -0.0188, -0.0638, 0.0602, -0.0471, -0.0436, 0.0178, -0.0566, 0.0077, 0.0278, 0.0254, -0.1577, -0.0239, 0.0033, -0.0177, 0.0898, -0.0268, -0.0343, 0.0214, -0.0241, -0.0183, -0.0622, -0.0466, -0.0037, 0.0117, -0.0066, -0.0069, -0.0673, 0.0024, -0.0150, 0.0079, -0.0451, 0.0366, 0.0310, -0.0036, -0.0231, 0.0303, 0.0266, 0.0402]


# asyncio.get_event_loop().run_until_complete(search("words", gruen))
# asyncio.get_event_loop().run_until_complete(search("words", bauwerk))

# asyncio.get_event_loop().run_until_complete(
#     query_by_id("words", "historischem"))

asyncio.get_event_loop().run_until_complete(get_index_info("words"))
